package cn.simple.token;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang.StringUtils;

import cn.simple.token.helper.MakeToken;

public class SessionTokenProcesser extends TokenProcesser {

	@Override
	public boolean validToken(HttpServletRequest request) {

		String clientToken = getClientToken(request);
		if (StringUtils.isEmpty(clientToken)) {
			return false;
		}
		HttpSession session = request.getSession(false);
		if(session==null)
		{
			return false;
		}
		String tokenKey = getTokenKey(request);
		String serverToken = session.getAttribute(tokenKey).toString();
		session.removeAttribute(serverToken);
		return clientToken.equals(serverToken);

	}

	@Override
	public String getTokenKey(HttpServletRequest request) {
		return getTokenField();
	}

	

	@Override
	public void saveToken(HttpServletRequest request) {

		String token = MakeToken.getInstance().getToken();
		System.out.println("current token:"+token);
		// 服务端保存token
		HttpSession session = request.getSession();
		session.setAttribute(getTokenKey(request), token);
		
		request.setAttribute(getTokenField(), token);
	}

}
